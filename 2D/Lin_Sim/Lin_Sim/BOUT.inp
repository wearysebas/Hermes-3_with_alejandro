nout = 20000000            # number of writes
timestep = 95780 * 0.1          # 9578 is 1/10 of a milisecond

MZ = 1                  # points in z
NXPE = 1                # partitions in x                

# Initial conditions
tnorm_setting = 100
initial_te = 25 / tnorm_setting
initial_ti = 25 / tnorm_setting
initial_ne = 0.5e18 / hermes:Nnorm    # Nm-3
initial_pe = initial_te * initial_ne
initial_pi = initial_ti * initial_ne

[input]
error_on_unused_options = false         # Prevents crash from custom inputs (has limits)

[mesh]        
file = "mu1af6-tunepuff.nc"             # Tokamak grid file, must be in same directory

[mesh:paralleltransform]                # Here be dragons *wrapping of field lines
type = shifted

[solver]                                # cvode (Beuler not very good in 2D atm)
mxstep = 1e9                            # Max steps (set to max)
mxorder = 1                             # Better to keep to first order
atol = 1e-12 * 1                        # don't touch
rtol = 1e-7 * 1                         # this value is good for most cases (could set to 1e-4)
use_precon = True                       # always true

[hermes]
components = (d+, d, e, c,
              collisions, sheath_boundary_simple, recycling, 
              sound_speed,
              reactions,
              electron_force_balance)                           # These are all we want

Nnorm = 1e17  # Reference density [m^-3]                        # Keep as this for now 
Bnorm = 1   # Reference magnetic field [T]
Tnorm = tnorm_setting   # Reference temperature [eV]
qe = 1.60218e-19
Mp = 1.67262e-27
Cs0 = sqrt(qe * Tnorm / Mp)
Omega_ci = qe * Bnorm / Mp
rho_s0 = Cs0 / Omega_ci


[collisions]
diagnose = true
electron_electron = true
ion_ion = true
electron_ion = true

# EN
electron_neutral = false

# IN
ion_neutral = false             # double counting with CX if true

# NN
neutral_neutral = false

################################################################
# Ions

[d+]
type = evolve_density, evolve_momentum, evolve_pressure, anomalous_diffusion

AA = 2
charge = 1

thermal_conduction = true
conduction_collisions_mode = braginskii


kappa_limit_alpha = 1 # matches David now
eta_limit_alpha = 0.5 # matches David now
# Change to match david

recycle_as = d
target_recycle = true
target_recycle_multiplier = 0.999   # matches David now
target_recycle_energy = 3.5

sol_recycle = true
sol_recycle_multiplier = 0.999   # matches David now
sol_recycle_energy = 3.5

pfr_recycle = true
pfr_recycle_multiplier = 0.999   # matches David now
pfr_recycle_energy = 3.5

neutral_pump = true
pump_recycle_multiplier = 0.999 #  

target_fast_recycle_energy_factor = 0.48        # Keep as same
target_fast_recycle_fraction = 0.80             # Keep as same

anomalous_nu = 0.2    ### change to davids
diagnose = true

[Nd+]

function = initial_ne                           # initial conditions (see above)
bndry_core = neumann
bndry_sol = decaylength(0.03 / hermes:rho_s0)
bndry_pf = decaylength(0.03 / hermes:rho_s0)    # Set to davids decay length unit is in m (DOUBLE check)
bndry_all = neumann   # All boundaries neumann  # Keep as neumann

[Pd+]

function = initial_pi
bndry_core = neumann
bndry_sol = decaylength(0.03 / hermes:rho_s0)   # lambda q beyond the grid (ask David)
bndry_pf = decaylength(0.03 / hermes:rho_s0)
bndry_all = neumann   # All boundaries neumann

# Core source
power_in = 0.30    # MW
core_volume = 0.17737   # m^3
pressure_source = power_in * 1e6 * 2/3 / core_volume
source = H(x) * H(0.015-x) * pressure_source
source_only_in_core = true

################################################################
# Neutrals

[d]
type = neutral_mixed, neutral_boundary
evolve_momentum = true                  # make sure on
precondition = false   # currently preconditioner is not good
diffusion_collisions_mode = afn

AA = 2
diagnose = true
diagnose_eqns = true
output_ddt = true

neutral_boundary_sol = true
neutral_boundary_pfr = true
neutral_boundary_upper_y = true
neutral_boundary_lower_y = true

target_energy_refl_factor = 0.70                # how much energy is kept during fast reflection
sol_energy_refl_factor = 0.67
pfr_energy_refl_factor = 0.67

target_fast_refl_fraction = 0.80                # how likely to fast reflection (keep numbers same)
sol_fast_refl_fraction = 0.70
pfr_fast_refl_fraction = 0.70

kappa_limit_alpha = 1

[Pd]
bndry_sol = neumann  # This prevents advection of density or energy out of the SOL
bndry_core = neumann
bndry_all = neumann

[Nd]
bndry_sol = neumann 
bndry_core = neumann  
bndry_all = neumann

# These are defaults
##################
[Td]
bndry_sol = neumann  
bndry_all = neumann

[Dnnd]
bndry_all = neumann

[DnnPnd]
bndry_all = neumann

[DnnTnd]
bndry_all = neumann

[DnnNnd]
bndry_all = neumann

################################################################
# Electrons

[e]
# Set electron density from quasineutrality,
# and parallel flow from ion flow, assuming no currents
type = quasineutral, evolve_pressure, zero_current, anomalous_diffusion

AA = 1/1836
charge = -1
thermal_conduction = true
kappa_limit_alpha = 0.3 # matches David now
diagnose = true
conduction_collisions_mode = braginskii


[Pe]
function = initial_pi
bndry_core = neumann
bndry_sol = decaylength(0.03 / hermes:rho_s0)
bndry_pfr = decaylength(0.03 / hermes:rho_s0)
bndry_all = neumann   # All other boundaries low density

# Core source
power_in = 0.30    # MW
core_volume = 0.17737   # m^3
pressure_source = power_in * 1e6 * 2/3 / core_volume
source = H(x) * H(0.015-x) * pressure_source
source_only_in_core = true

################################################################

[c]
type = fixed_fraction_carbon
fraction = 0.02   # 
no_core_radiation = true
diagnose = true   # Saves Rc (R + section name)

################################################################
[sheath_boundary_simple]
gamma_i = 2.5   # matches David now
gamma_e = 4.5   # matches David now



[recycling]

species = d+

[reactions]

diagnose = true

type = (
        d + e -> d+ + 2e,     # Deuterium ionisation
        d+ + e -> d,          # Deuterium recombination
        d + d+ -> d+ + d,     # Charge exchange
       )
